version: '3'

services:
  nginx:
    build: ./docker/development/nginx
    volumes:
      - ./:/app
    ports:
      - "8080:8080"
    depends_on:
      - php-fpm
      - redis
      - mysql
    networks:
      - shop-network

  php-cli:
    build: ./docker/development/php/cli
    volumes:
      - ./backend:/app/backend
      - composer:/root/.composer/cache
    networks:
      - shop-network

  php-fpm:
    build: ./docker/development/php/fpm
    volumes:
      - ./backend:/app/backend
    networks:
      - shop-network

  redis:
    image: redis:6.0.6-alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes"]
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    networks:
      - shop-network

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_USER: admin
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: shop
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - shop-network
    ports:
      - "33061:3306"

  node:
    build:
      context: ./client
      dockerfile: ../docker/development/node/Dockerfile
    command: npm run dev
    volumes:
      - ./client:/app
    stdin_open: true
    tty: true
    networks:
      - shop-network
    ports:
      - "3000:3000"
    environment:
      GRAPHQL_URL: "http://nginx:8080/api"

networks:
  shop-network:
    driver: bridge

volumes:
  composer:
  mysql: